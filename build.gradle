/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'Waylesange' at '09.11.16 16:57' with Gradle 3.1
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.1/userguide/tutorial_java_projects.html
 */
group 'ru.innopolis.university.course2'
version '1.0'

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'idea'

sourceCompatibility = 1.8

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenLocal()
    mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'
    //compile 'org.slf4j:slf4j-simple:1.7.21'
    compile 'org.slf4j:slf4j-log4j12:1.7.21'
    //compile 'log4j:log4j:1.2.17'
    compile group: 'org.mockito', name: 'mockito-all', version: '1.9.5'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}

jar {
    manifest {
        attributes "Main-Class" : "MainClass"
    }
}

jar.doFirst() {
    version = version + "." + new File("build.number").text;
}

jar.doLast() {
    File file = new File("build.number");
    file.write String.valueOf(Integer.parseInt(file.text) + 1);
}